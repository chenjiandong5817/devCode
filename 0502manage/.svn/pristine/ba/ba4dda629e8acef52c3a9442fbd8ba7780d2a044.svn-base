<!-- /*
 * @Author: cdroid
 * @Date: 2017-05-25 10:42:17
 * @Last Modified by: mikey.zhaopeng
 * @Last Modified time: 2017-06-27 15:33:48
 * @Description: 通用机场列表界面
 */ -->
<template>
  <section style="background-color: #f6f7f9;">
    <el-row>
      <el-col>
        <el-row style="margin-top: 30px;">
           <el-col :span="1">
             <div style="width: 5px;height: 5px;"></div>
           </el-col>
           <el-col :span="22" class="panel-show">
             <div id="realTimeDataHome" class="real-time-data-home-tag realTimeDataHomeHeight">
             </div>
           </el-col>
           <el-col :span="1">
             <div style="width: 5px;height: 5px;"></div>
           </el-col>
        </el-row>
        <el-row style="margin-top: 30px;">
           <el-col :span="1">
             <div style="width: 5px;height: 5px;"></div>
           </el-col>
           <el-col :span="10" class="panel-show">
              <div id="operationIncomeHome" class="operationIncomeHomeHeight">
              </div>
           </el-col>
           <el-col :span="2">
             <div style="width: 5px;height: 5px;"></div>
           </el-col>
           <el-col :span="10" class="panel-show">
              <div id="operationSituationHome" class="operationSituationHomeHeight">
              </div>
           </el-col>
           <el-col :span="1">
             <div style="width: 5px;height: 5px;"></div>
           </el-col>
        </el-row>
      </el-col>
    </el-row>
  </section>
</template>

<script>
import Highcharts from 'highcharts'
import API from './../../api'
import Util from './../../common/js/util'
  export default {
    data () {
      return {
        realData: [ 890, 180, 280, 12 ],
        operationIncome: [ 890, 390, 500 ],
        operationSituation: [
          {
              name: '正常运行台数',
              y: 52,
              sliced: true,
              selected: true
          },
          ['暂停服务台数', 4] ]
      }
    },
    computed: {
    },
    components: {
    },
    methods: {
      initHighChart () {
        // 实时数据
        Highcharts.chart('realTimeDataHome', {
          chart: {
            type: 'bar'
          },
          title: {
            text: '实时数据'
          },
          subtitle: {
            text: '数据来源：实际情况'
          },
          xAxis: {
            categories: ['今日一体机订单', '今日专车订单', '今日快线购票数量', '下单未支付数量'],
            title: {
               text: null
            }
          },
          yAxis: {
            min: 0,
            title: {
               text: '单位 (单)',
               align: 'high'
            },
            labels: {
               overflow: 'justify'
            }
          },
          tooltip: {
            valueSuffix: '单'
          },
          plotOptions: {
            bar: {
               dataLabels: {
                  enabled: true
               }
            }
          },
          legend: {
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'top',
            x: -40,
            y: 100,
            floating: true,
            borderWidth: 1,
            backgroundColor: ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),
            shadow: true
          },
          credits: {
            enabled: false
          },
          series: [
            { name: '数量：', data: this.realData }
          ]
        })
        // 营运收入
        Highcharts.chart('operationIncomeHome', {
          chart: {
            type: 'column'
          },
          title: {
            text: '营运收入'
          },
          subtitle: {
            text: ''
          },
          xAxis: {
            categories: ['今天营业总收入', '专车收入', '快线收入'],
            crosshair: true
          },
          yAxis: {
            min: 0,
            title: {
               text: '人民币 (rmb)'
            }
          },
          tooltip: {
            headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
            pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
               '<td style="padding:0"><b>{point.y:.1f} rmb</b></td></tr>',
            footerFormat: '</table>',
            shared: true,
            useHTML: true
          },
          plotOptions: {
            column: {
               pointPadding: 0.2,
               borderWidth: 0
            }
          },
          credits: {
            enabled: false
          },
          series: [ {
            name: '营运收入',
            data: this.operationIncome
          } ]
        })
        // 一体机运行情况
        Highcharts.chart('operationSituationHome', {
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false
            },
            title: {
                text: '一体机运行情况'
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            credits: {
                enabled: false
            },
            plotOptions: {
              pie: {
                  allowPointSelect: true,
                  cursor: 'pointer',
                  dataLabels: {
                  enabled: true,
                  formatter: function () {
                    return '<span style="color: ' + this.point.color + '"> 值：' + this.y + '，占比' + this.percentage.toFixed(1) + '%</span>'
                  },
                  style: {
                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                  }
                }
              }
           },
            series: [{
              type: 'pie',
              name: '一体机运行情况',
              data: this.operationSituation
           }]
        })
      },
      // 一体机运行情况
      // 正常运行台数
      getRunDevices () {
        this.listLoading = true
        API.devicesRun().go().then((data) => {
          if (data.status === 1) {
            this.operationSituation[0].y = data.data
            this.getSuspendDevices()
          } else {
            this.$notify(Util.notifyBody(false, data.message))
          }
          this.listLoading = false
        })
      },
      // 暂停运行台数
      getSuspendDevices () {
        this.listLoading = true
        API.devicesSuspend().go().then((data) => {
          if (data.status === 1) {
            this.operationSituation[1][1] = data.data
            this.getTodayOrder()
          } else {
            this.$notify(Util.notifyBody(false, data.message))
          }
          this.listLoading = false
        })
      },
      // 获得当日订单概况
      getTodayOrder () {
        var dataType = 3
        API.queryAllOrder().go(dataType).then((data) => {
          if (data.status === 1) {
            console.log(data.data)
            // 实时数据
            this.realData[0] = data.data.totalCount
            this.realData[1] = 0
            this.realData[2] = data.data.totalCount
            this.realData[3] = data.data.totalCount - data.data.completeCount
            // 营运收入
            this.operationIncome[0] = data.data.totalMoney
            this.operationIncome[1] = 0
            this.operationIncome[2] = data.data.totalMoney
            this.initHighChart()
          } else {
            this.$notify(Util.notifyBody(false, data.message))
          }
          this.listLoading = false
        })
      }
    },
    mounted () {
      this.getRunDevices()
    }
  }
</script>

<style>
   .panel-show {
     /*height: 380px;*/
     background-color: #ffffff;
   }
   .real-time-data-home-tag .highcharts-credits {
  	 display: none;
   }
    @media screen and (min-height: 0px) and (max-height: 767px) {
      .realTimeDataHomeHeight {
        height: 244px!important
      }
      .operationIncomeHomeHeight {
        height: 244px!important
      }
      .operationSituationHomeHeight {
        height: 244px!important
      }
    }
    @media screen and (min-height: 768px) and (max-height: 1080px) {
      .realTimeDataHomeHeight {
        height: 400px!important
      }
      .operationIncomeHomeHeight {
        height: 400px!important
      }
      .operationSituationHomeHeight {
        height: 400px!important
      }
    }
</style>
