/*
 * @Author: chenyang
 * @Date: 2017-09-20 17:32:34
 * @Last Modified by: chenyang
 * @Last Modified time: 2017-10-09 16:45:41
 */
<template>
  <section>
    <!--工具条-->
    <el-col :span="24" class="toolbar" style="padding-bottom: 0px;">
      <el-form :inline="true" :model="filters">
        <el-form-item>
          <el-input v-model="filters.imagetype" placeholder="图片类型" ></el-input>
        </el-form-item>
        <el-form-item>
          <el-input v-model="filters.imagename" placeholder="图片名称" ></el-input>
        </el-form-item>
        <el-form-item>
          <el-input v-model="filters.imagesize" placeholder="图片尺寸" ></el-input>
        </el-form-item>
        <el-form-item>
          <el-input v-model="filters.filetype" placeholder="文件格式" ></el-input>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" v-on:click="getImages">查询</el-button>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" @click="handleAdd">新增</el-button>
        </el-form-item>
      </el-form>
    </el-col>
    <!--列表-->
    <el-table v-bind:data="imageList" highlight-current-row v-loading="listLoading" @selection-change="selsChange" :height="tableHeight" style="width: 100%;">
      <el-table-column type="selection" width="55">
      </el-table-column>
      <el-table-column type="index" width="80">
        <template scope="scope">
          {{pageSize * (pageNumber - 1) + scope.$index + 1 }}
        </template>
      </el-table-column>
      <el-table-column prop="imagetype" label="图片类型" width="180" sortable>
      </el-table-column>
      <el-table-column prop="imagename" label="图片名称" width="180" sortable>
      </el-table-column>
      <el-table-column prop="imagesize" label="图片尺寸" width="180" sortable show-overflow-tooltip>
      </el-table-column>
      <el-table-column prop="filetype" label="文件类型" width="180" sortable show-overflow-tooltip>
      </el-table-column>
      <el-table-column prop="description" label="描述" width="180" sortable >
      </el-table-column>
      <el-table-column label="操作" min-width="150">
        <template scope="scope">
          <el-popover
            ref="popover4"
            placement="right"
            width="200"
            trigger="click">
            <img :src="imageUrl" height="200" width="200">
          </el-popover>
          <el-button v-popover:popover4 type="success" size="small" @click="preview(scope.$index, scope.row)">图片预览</el-button>
        </template>
      </el-table-column>
      <el-table-column label="操作" width="120" fixed="right" >
        <template scope="scope">
          <!--<el-button size="small" @click="handleEdit(scope.$index, scope.row)">编辑</el-button>-->
          <el-dropdown @command="handleCommand">
            <el-button size="small" >更多操作<i class="el-icon-caret-bottom el-icon--right"></i></el-button>
            <el-dropdown-menu slot="dropdown">
              <el-dropdown-item command="handleEdit" :index="scope.$index" :row="scope.row"><span><i class="el-icon-edit"></i> 编辑 </span></el-dropdown-item>
              <el-dropdown-item command="handleDel" :index="scope.$index" :row="scope.row"><span><i class="el-icon-delete"></i> 删除 </span></el-dropdown-item>
            </el-dropdown-menu>
          </el-dropdown>
        </template>
      </el-table-column>
    </el-table>

    <!--分页-->
    <pagination :to="getImages" ref="page"></pagination>

    <!--删除窗口-->
    <common-delete
        :to="API.removeImage().go"
        :callback="getImages"
        :labelWidth="100"
        ref="delConfirm">
    </common-delete>
    <image-add-or-update
      title="新增"
      Func="addFunc"
      :callback="getImages"
      :labelWidth="100"
      ref="imageAddForm">
    </image-add-or-update>
    <image-add-or-update
      title="编辑"
      Func="editFunc"
      :callback="getImages"
      :labelWidth="100"
      ref="imageEditForm">
    </image-add-or-update>
  </section>
</template>

<script>
  import Util from '../../common/js/util'
  import chooseDialog from './../../components/CommChooseGrid'
  import commonAddOrUpdate from './../../components/CommAddOrUpdate'
  import commonDelete from './../../components/CommDelete'
  import API from '../../api'
  import Pagination from '../../components/Pagination'
  import GlobalConfig from '../../common/config/global'
  import ImageAddOrUpdate from '../device/ImageAddForm/ImageAddOrUpdate'

  export default {
    data () {
      return {
        filters: {
          imagename: '',
          imagetype: '',
          imagesize: '',
          filetype: ''
        },
        airLinesList: [],
        checkInModeList: [],
        checkInTypeList: [],
        imageList: [],
        tableHeight: 560,
        listLoading: false,
        selectItemDetail: {},
        sels: [],
        filename: [],
        imageUrl: [],
        // 新增编辑需要的字段
        fields: [
          { name: 'id', value: '', hidden: true },
          { name: 'imagetype', value: '', label: '图片类型', type: 'select', rules: null },
          { name: 'imagesize', value: '', label: '图片尺寸', type: 'select', rules: null },
          { name: 'filetype', value: '', label: '文件类型', type: 'select', rules: null },
          { name: 'imagename', value: '', label: '图片名称', type: 'text', rules: null },
          { name: 'description', value: '', label: '描述', type: 'text', rules: null }
          // { name: 'description', value: '', label: '描述', type: 'select', choose: [ { text: '国内', value: 'D' }, { text: '国际', value: 'I' }, { text: '地区', value: 'R' } ], rules: [ { required: true, message: '请选择地区代码' } ] },
        ],
        API: API
      }
    },
    computed: {
      pageNumber () {
        return this.$refs['page'].get('pageNumber')
      },
      pageSize () {
        return this.$refs['page'].get('pageSize')
      }
    },
    components: {
      chooseDialog: chooseDialog,
      commonAddOrUpdate: commonAddOrUpdate,
      commonDelete: commonDelete,
      pagination: Pagination,
      imageAddOrUpdate: ImageAddOrUpdate
    },
    methods: {
      getImages () {
        let para = Object.assign({}, this.filters, this.$refs['page'].queryParam())
        this.listLoading = true
        API.getImage().go(para).then((data) => {
          if (data.ok) {
            this.$refs['page'].set('total', data.attr.data.pager.recordCount)
            this.imageList = data.attr.data.list
          } else {
            this.$notify(Util.notifyBody(false, data.msg))
          }
          this.listLoading = false
        })
      },
      selsChange: function (sels) {
        this.sels = sels
      },
      handleCommand: function (command, self) {
        var node = self.$vnode.data.attrs
        /* eslint-disable */
        eval('this.' + command).call(this, node.index, node.row)
        /* eslint-enable */
      },
      // 删除
      handleDel: function (index, row) {
        this.$refs['delConfirm'].del(row)
      },
      // 显示新增界面
      handleAdd: function () {
        this.$refs['imageAddForm'].show()
      },
      // 显示编辑界面
      handleEdit: function (index, row) {
        // console.log(row)
        this.$refs['imageEditForm'].show(row)
        // console.log(this.filters.imagetype)
      },
      preview (index, row) {
        let urlPart = GlobalConfig.urlPart
        let imgName = GlobalConfig.imgName
        let imgType = GlobalConfig.imgType
        let flType = GlobalConfig.flType
        let imgSize = GlobalConfig.imgSize
        let imageName = row.imagename
        let imageType = row.imagetype
        let fileType = row.filetype
        let imageSize = row.imagesize
        let finalUrl = urlPart + imgName + imageName + '&' + imgType + imageType + '&' + flType + fileType + '&' + imgSize + imageSize
        this.imageUrl = finalUrl
        console.log(this.imageUrl)
      }
    },
    mounted () {
      this.getImages()
    }
  }

</script>

<style scoped>

</style>
