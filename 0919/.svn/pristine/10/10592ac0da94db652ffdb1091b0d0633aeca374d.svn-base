/*
 * @Author: ylj
 * @Date: 2017-11-13 19:16:05
 * @Last Modified by: ylj
 * @Last Modified time: 2017-11-14 21:15:09
 */
<template>
  <div class="flightLoad">
    <!--搜索工具栏（整行、置顶）-->
    <el-col :span="24" class="toolbar" style="padding-bottom: 0px;">
      <el-form :inline="true" :model="filters">
        <el-form-item>
          <city-name
            ref="city"
            v-on:getAirportName = "airportCodeChange">
          </city-name>
        </el-form-item>
        <el-form-item>
          <el-input v-model="filters.flightNo" placeholder="航班号" :icon="iconClass" @mouseenter.native="inputHovering = true"
            :onIconClick="cleardata" @mouseleave.native="inputHovering = false"></el-input>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" v-on:click="getFlightLoadls">查询</el-button>
        </el-form-item>
        <el-form-item>
          <el-button type="primary" v-on:click="handleAdd">新增</el-button>
        </el-form-item>

        <el-form-item>
          <el-radio-group v-model="directionRadio" @change="setDirFileter">
            <el-radio class="radio" label="A">进港</el-radio>
            <el-radio class="radio" label="D">出港</el-radio>
            <el-radio class="radio" label="">所有</el-radio>
          </el-radio-group>
        </el-form-item>
      </el-form>
    </el-col>

    <!--列表-->
    <el-table v-bind:data="flightLoads" highlight-current-row v-loading="loading" @selection-change="selectChange" :height="tableHeight" style="width: 100%;" row-class-name="setrowStyle">
      <el-table-column type="index" label="序号" align="center" width="42">
        <template scope="scope">
          {{pageSize * (pageNumber - 1) + scope.$index + 1}}
        </template>
      </el-table-column>
      <el-table-column prop="flightSchedule.opDate" label="执行日期" :formatter="dataFormat" width="83" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="flightSchedule.flightTask" label="任务" width="55" sortable>
        <template scope="scope">
          {{$cache.findByName('flighttasks', 'flightTaskCode', scope.row.flightSchedule.flightTask, 'abbr2w' )}}
        </template>
      </el-table-column>
      <el-table-column prop="flightSchedule.carrier" label="公司" width="55" sortable></el-table-column>
      <el-table-column prop="flightSchedule.flightNo" label="航班号" width="70" sortable></el-table-column>
      <el-table-column prop="flightSchedule.direction" label="进出" width="55" sortable>
        <template scope="scope" >
          {{$cache.findByName('flightdirections', 'directionCode', scope.row.flightSchedule.direction, 'description' )}}
        </template>
      </el-table-column>
      <el-table-column prop="flightSchedule.origin" label="起飞站" width="70" sortable show-overflow-tooltip >
        <template scope="scope" >
          {{$cache.findByName('airports', 'iatacode', scope.row.flightSchedule.origin, 'cnabbr2w' )}}
        </template>
      </el-table-column>
      <el-table-column prop="flightSchedule.destination" label="目的站" width="70" sortable>
        <template scope="scope" >
          {{$cache.findByName('airports', 'iatacode', scope.row.flightSchedule.destination, 'cnabbr2w' )}}
        </template>
      </el-table-column>
      <el-table-column prop="flightSchedule.registration" label="机号" width="55" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="flightSchedule.aircraftType" label="机型" width="55" sortable></el-table-column>
      <el-table-column prop="flightSchedule.flightNature" label="区域" width="55" sortable show-overflow-tooltip >
        <template scope="scope">
          {{$cache.findByName('flightnatures', 'flightNatureCode', scope.row.flightSchedule.flightNature, 'description' )}}
        </template>
      </el-table-column>
      <el-table-column prop="adult" label="成人数" width="70" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="child" label="儿童数" width="70" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="infant" label="婴儿数" width="70" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="firstClass" label="头等舱人数" width="100" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="businessClass" label="商务舱人数" width="100" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="economyCladd" label="经济舱人数" width="100" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="transitAdult" label="过站成人数" width="100" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="transitChild" label="过站儿童数" width="100" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="transitInfant" label="过站婴儿数" width="100" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="baggage" label="行李重量" width="85" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="baggageCount" label="行李件数" width="85" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="post" label="邮件重量" width="85" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="cargo" label="货物重量" width="85" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="transitBaggage" label="过站行李重量" width="115" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="transitPost" label="过站邮件重量" width="115" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="transitCargo" label="过站货物重量" width="115" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column prop="transitBaggageCount" label="过站行李件数" min-width="115" align="center" sortable show-overflow-tooltip ></el-table-column>
      <el-table-column label="操作" width="90" header-align="center" fixed="right">
        <template scope="scope">
          <el-button @click="handleEdit(scope.$index, scope.row)" type="text" size="small">编辑</el-button>
          <el-button @click="handleDel(scope.$index, scope.row)" type="text" size="small">删除</el-button>
        </template>
      </el-table-column>
    </el-table>

    <!--分页-->
    <pagination :to="getFlightLoadls" ref="page"></pagination>

    <!--删除窗口-->
    <commonDelete
      :to="API.removePlanFlight().go"
      :callback="getFlightLoadls"
      :labelWidth="100"
      ref="flightLoadDelForm"></commonDelete>

    <!--新增界面-->
    <add-or-update
      type="add"
      size="tiny"
      labelPosition="top"
      :to="API.addFlightLoad().go"
      :callback="getFlightLoadls"
      :labelWidth="100"
      ref="addForm"></add-or-update>

    <!--编辑界面-->
    <add-or-update
      type="add"
      size="tiny"
      labelPosition="top"
      :to="API.editFlightLoad().go"
      :callback="getFlightLoadls"
      :labelWidth="100"
      ref="editForm"></add-or-update>

  </div>
</template>

<script>
import Util from '../../common/js/util'
import Butil from '../../common/js/base-util'
import Pagination from '../../components/Pagination'
import API from '../../api'
import addOrUpdate from '../base/baseForm/CommAddOrUpdate'
import commonDelete from './../../components/CommDelete'
import CityName from '../../components/CityName'
import Rules from './../../common/js/rules'

export default {
  data () {
    return {
      filters: {
        flightNo: '',
        airportCode: '',
        direction: this.directionRadio
      },
      flightLoads: [],
      subAirportLs: [],
      loading: false,
      tableHeight: 450,
      selects: [],
      API: API,
      inputHovering: false,
      directionRadio: '',
      fields: [
          {
            id: '0',
            hidden: true,
            item: [
              { name: 'id', value: '' }
            ]
           },
           {
            id: '1',
            item: [
              { name: 'opDate', value: '', label: '执行日期', visitDate: true, visitTime: false, dateStyle: 'width: 100%', timeStyle: 'width: 30%', type: 'dateTimeGroup', allDisable: false, datePlaceholder: '执行日期', timePlaceholder: '时间', formatter: 'yyyy-MM-dd', rules: null, span: 6 },
              { name: 'flightTask', value: '', label: '任务', type: 'text', rules: null, placeholder: '任务', span: 6 },
              { name: 'carrier', value: '', label: '公司', type: 'text', rules: null, placeholder: '公司', span: 6 },
              { name: 'flightNo', value: '', label: '航班号', type: 'text', rules: null, placeholder: '航班号', span: 6 }
            ]
           },
           {
            id: '2',
            item: [
              { name: 'direction', value: '', label: '进出', type: 'text', rules: null, placeholder: '进出', span: 6 },
              { name: 'origin', value: '', label: '起飞站', type: 'text', rules: null, placeholder: '起飞站', span: 6 },
              { name: 'destination', value: '', label: '目的站', type: 'text', rules: null, placeholder: '目的站', span: 6 },
              { name: 'flightNature', value: '', label: '区域', type: 'text', rules: null, placeholder: '区域', span: 6 }
            ]
           },
           {
            id: '3',
            item: [
              { name: 'adult', value: 0, label: '成人数', type: 'number', rules: [ { validator: Rules.checkNum, minVal: 0, maxVal: 10, trigger: 'blur' } ], placeholder: '成人数', span: 6 },
              { name: 'child', value: 0, label: '儿童数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入儿童数，最多三位数' } ], placeholder: '儿童数', span: 6 },
              { name: 'infant', value: 0, label: '婴儿数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入婴儿数，最多三位数' } ], placeholder: '婴儿数', span: 6 },
              { name: 'firstClass', value: 0, label: '头等舱人数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入头等舱人数，最多三位数' } ], placeholder: '头等舱人数', span: 6 }
            ]
           },
           {
            id: '4',
            item: [
              { name: 'transitAdult', value: '', label: '过站成人数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入过站成人数，最多三位数' } ], placeholder: '过站成人数', span: 6 },
              { name: 'transitChild', value: '', label: '过站儿童数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入过站儿童数，最多三位数' } ], placeholder: '过站儿童数', span: 6 },
              { name: 'transitInfant', value: '', label: '过站婴儿数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入过站婴儿数，最多三位数' } ], placeholder: '过站婴儿数', span: 6 },
              { name: 'businessClass', value: '', label: '商务舱人数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入商务舱人数，最多三位数' } ], placeholder: '商务舱人数', span: 6 }
            ]
           },
           {
            id: '5',
            item: [
              { name: 'economyCladd', value: '', label: '经济舱人数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入经济舱人数，最多三位数' } ], placeholder: '经济舱人数', span: 6 },
              { name: 'baggage', value: '', label: '行李重量', type: 'number', rules: [ { max: 3, min: 1, message: '请输入行李重量，最多三位数' } ], placeholder: '行李重量', span: 6 },
              { name: 'baggageCount', value: '', label: '行李件数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入行李件数，最多三位数' } ], placeholder: '行李件数', span: 6 },
              { name: 'post', value: '', label: '邮件重量', type: 'number', rules: [ { max: 3, min: 1, message: '请输入邮件重量，最多三位数' } ], placeholder: '邮件重量', span: 6 }
            ]
           },
           {
            id: '6',
            item: [
              { name: 'cargo', value: '', label: '货物重量', type: 'number', rules: [ { max: 3, min: 1, message: '请输入货物重量，最多三位数' } ], placeholder: '货物重量', span: 6 },
              { name: 'transitBaggage', value: '', label: '过站行李重量', type: 'number', rules: [ { max: 3, min: 1, message: '请输入过站行李重量，最多三位数' } ], placeholder: '过站行李重量', span: 6 },
              { name: 'transitBaggageCount', value: '', label: '过站行李件数', type: 'number', rules: [ { max: 3, min: 1, message: '请输入过站行李件数，最多三位数' } ], placeholder: '过站行李件数', span: 6 },
              { name: 'transitPost', value: '', label: '过站邮件重量', type: 'number', rules: [ { max: 3, min: 1, message: '请输入过站邮件重量，最多三位数' } ], placeholder: '过站邮件重量', span: 6 }
            ]
           },
           {
            id: '7',
            item: [
              { name: 'transitCargo', value: '', label: '过站货物重量', type: 'number', rules: [ { max: 3, min: 1, message: '请输入过站货物重量，最多三位数' } ], placeholder: '过站货物重量', span: 6 }
            ]
           }
        ]
    }
  },
  computed: {
    pageNumber () {
      return this.$refs['page'].get('pageNumber')
    },
    pageSize () {
      return this.$refs['page'].get('pageSize')
    },
    iconClass () {
      // 计算过滤行输入框样式
      let criteria = this.inputHovering &&
        this.filters.flightNo !== undefined &&
        this.filters.flightNo !== '' &&
        this.filters.flightNo !== null
      return criteria ? 'circle-close is-show-close' : ' '
    }
  },
  watch: {
    '$store.state.cached' (val, oldVal) {
      // 重新刷新数据
      this.getFlightLoadls()
    }
  },
  components: {
    pagination: Pagination,
    addOrUpdate: addOrUpdate,
    commonDelete: commonDelete,
    CityName: CityName
  },
  methods: {
    bindData () {
      // this.$refs['page'].set('pageSize', 40)
      this.subAirportLs = Butil.getSubscribeAirports()
      this.setAirportInfo(this.subAirportLs)
      this.filters.airportCode = this.$refs['city'].airportCode
      this.getFlightLoadls()
    },
    getFlightLoadls () {
      let para = Object.assign({}, this.filters, this.$refs['page'].queryParam())
      this.loading = true
      API.getFlightLoadls().go(para).then((data) => {
        if (data.ok) {
          this.$refs['page'].set('total', data.attr.data.pager.recordCount)
          this.flightLoads = data.attr.data.list
        } else {
          this.$notify(Util.notifyBody(false, data.msg))
        }
        this.loading = false
      })
    },
    selectChange: function (select) {
      this.selects = select
    },
    handleAdd: function () {
      let addFields = Util.deepCopy(this.fields)
      this.$refs['addForm'].show(addFields)
    },
    handleEdit: function (index, row) {
      let editFields = Util.deepCopy(this.fields)
      for (let i = 0; i < editFields.length; i++) {
        for (let j = 0; j < editFields[i].item.length; j++) {
          editFields[i].item[j].value = row[editFields[i].item[j].name]
        }
      }
      this.$refs['editForm'].show(editFields)
    },
    handleDel: function (index, row) {
      this.$refs['flightLoadDelForm'].del(row)
    },
    dataFormat: function (row, column, cellValue) {
      let property = column.property
      let fields = []
      fields = property.split('.')
      // 格式化数据列表中日期格式
      let date = row[fields[0]][fields[1]]
      if (date === undefined || date === null) {
        return ''
      }
      switch (property) {
        case 'flightSchedule.opDate': return Util.formatDate.flightDateFmt('yyyy-MM-dd', date, false)
        case 'flightSchedule.scheduleDepartTime': return Util.formatDate.flightDateFmt('hhmm', date, true, row.opDate)
        case 'flightSchedule.scheduleArriveTime': return Util.formatDate.flightDateFmt('hhmm', date, true, row.opDate)
        default: break
      }
    },
    cleardata: function () {
      // 清除输入框内容
      this.filters.flightNo = ''
    },
    setDirFileter: function (val) {
      // 根据进出港Radio筛选数据
      this.filters['direction'] = val
      if (val === 'Z') {
        this.filters.direction = ''
      }
      this.getFlightLoadls()
    },
    setAirportInfo (subAirportLs) {
      this.$refs['city'].setCitys(subAirportLs)
    },
    airportCodeChange: function (airportCode) {
      this.filters.airportCode = airportCode
      this.getFlightLoadls()
    }
  },
  mounted () {
    this.bindData()
  }
}
</script>
<style lang="scss">
.flightLoad {
  .el-table .cell, .el-table th>div {
      padding-left: 4px!important;
      padding-right: 2px!important;
      box-sizing: border-box;
      text-overflow: ellipsis;
  }

  .el-table {
      overflow: hidden;
      width: 100%;
      max-width: 100%;
      background-color: #fff;
      border: 1px solid #dfe6ec;
      font-size: 14px;
      color: #1f2d3d;
      margin-left: 10px !important;
  }
}
</style>

