/*
 * @Author: chenyang
 * @Date: 2017-09-21 17:14:14
 * @Last Modified by: chenyang
 * @Last Modified time: 2017-10-18 11:37:08
 */
// 1.输入目的地 2.对图片名称赋值 3.选择图片时在图片提交前获取格式 4.图片尺寸已定 5.数据获取完毕准备提交
 <template>
    <!--<el-form :model="deviceInfo" ref="deviceAddOrUpdateForm" class="demo-ruleForm" >-->
    <el-form v-show="visible">
      <el-card class="box-card maxWidth">
        <el-row>
          <el-tag type="warning">选择目的地并添加不同尺寸的图片</el-tag>
        </el-row>
        </br>
        <el-form-item label="目标地点">
          <el-select v-model="destinationCity" placeholder="选择目的地" @change="destinationClick" :filterable="true" class="maxWidth">
            <el-option v-for="item in bindDestination" :key="item.value" :label="item.text" :value="item.value">
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="描述">
          <el-input v-model="description" placeholder="添加描述,选填" type="textarea"></el-input>
        </el-form-item>
        <el-row :gutter="20">
            <div v-for="(item, index) in sizeList" :key="item.imageSize">
              <el-col :span="6" @click.native.capture="uploadClick(index)">
                </br>
                <el-upload
                  class="avatar-uploader"
                  action="/raiis/image"
                  :show-file-list="false"
                  :on-success="handleSuccess"
                  :before-upload="BeforeSubmit">
                  <img v-if="item.url" :src="item.url" class="avatar">
                  <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                </el-upload>
                <el-tag type="success">尺寸: {{item.imageSize}}</el-tag>
                <el-button type="info" @click="clearImages(index)" icon="delete" class="buttonwidth" size="mini">清空图片</el-button>
              </el-col>
            </div>
        </el-row>
      </el-card>
    </el-form>
</template>

<script>
import GlobalConfig from '../../../common/config/global'
export default {
  props: {
    title: {
      type: String,
      default: '新增'
    },
    to: {
      type: Function,
      default: function () { }
    },
    callback: {
      type: Function,
      default: function () { }
    },
    ForDestination: {
      type: Array
    }
  },
  data () {
    return {
      sizeList: [],  // 存放size
      destinationData: {url: '', destination: '', imageFormat: '', imageSize: '', imageName: ''},
      description: '',
      destinationCity: '',
      currentClick: -1,
      visible: false,
      loading: false,
      oldValue: {},
      bindDestination: []
    }
  },
  methods: {
    uploadClick (index) {
      this.currentClick = index
    },
    handleSuccess (res, file) {   // 上传图片才能获取数据，提交，否则没数据
      console.log(res)
      this.sizeList[this.currentClick].url = URL.createObjectURL(file.raw)
      this.sizeList[this.currentClick].imageFormat = this.getFileFormat(file.name)
      this.sizeList[this.currentClick].imageName = this.destinationCity
      this.sizeList[this.currentClick].destination = this.destinationCity

      console.log('这是第' + this.currentClick + '个')
      console.log('尺寸为:' + this.sizeList[this.currentClick].imageSize)
      console.log('格式为:' + this.sizeList[this.currentClick].imageFormat)
      console.log('目的地为:' + this.sizeList[this.currentClick].destination)
      console.log('图片名字为:' + this.sizeList[this.currentClick].imageName)
      console.log('url为:' + this.sizeList[this.currentClick].url)
    },
    clearDataForm () {
      this.destinationCity = ''
      for (let i = 0; i < this.sizeList.length; i++) {
        this.clearImages(i)
      }
    },
    clearImages (index) {
      this.sizeList[index].url = ''
    },
    clearDestination () {
      for (let i = 0; i < this.sizeList.length; i++) {
        this.sizeList[i].destination = ''
      }
    },
    BeforeSubmit (file) {
      console.log(file)
      // this.smallSize.imageFormat = this.getFileFormat(file.name)
      const isLt2M = file.size / 1024 / 1024 < 2

      // if (!isJPG) {
      //   this.$message.error('上传头像图片只能是 JPG 格式!')
      // }
      if (!isLt2M) {
        this.$message.error('上传头像图片大小不能超过 2MB!')
      }
      // return isJPG && isLt2M
      return isLt2M
    },
    getSizeConfig () {  // 获取尺寸列表
      this.sizeList = []
      for (let i = 0; i < GlobalConfig.imageSize.length; i++) {
        this.destinationData = {url: '', destination: '', imageFormat: '', imageSize: '', imageName: ''}
        this.destinationData.imageSize = GlobalConfig.imageSize[i]
        this.destinationData.url = ''
        this.destinationData.destination = ''
        this.destinationData.imageFormat = ''
        this.destinationData.imageName = ''
        this.sizeList.push(this.destinationData)
      }
      console.log(this.sizeList)
    },
    destinationClick () {
      for (let i = 0; i < this.sizeList.length; i++) {
        this.sizeList[i].imageName = this.destinationCity
        this.sizeList[i].destination = this.destinationCity
      }
    },
    getFileFormat (fileName) {
      let name = []
      name = fileName.split('.')
      console.log(name[1])
      return name[1]
    },
    initData () {
      // console.log('激活')
      this.bindDestination = this.ForDestination
      // console.log(this.airport)
    },
    show: function () {
      this.getSizeConfig()
      this.initData()
        // this.setData()
      this.visible = true
    },
    handleClose () {
      this.visible = false
    }
  }
}
</script>

<style scoped>
  .text {
    font-size: 14px;
  }

  .item {
    padding: 18px 0;
  }

  .clearfix:before,
  .clearfix:after {
      display: table;
      content: "";
  }
  .clearfix:after {
      clear: both
  }

  .box-card {
    width: 480px;
  }

  .maxWidth {
    width: 100%;
  }
  .avatar-uploader .el-upload {
    border: 1px dashed #d9d9d9;
    border-radius: 6px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
  }
  .avatar-uploader .el-upload:hover {
    border-color: #20a0ff;
  }
  .avatar-uploader-icon {
    font-size: 28px;
    color: #8c939d;
    width: 178px;
    height: 138px;
    line-height: 178px;
    text-align: center;
  }
  .avatar {
    width: 178px;
    height: 138px;
    display: block;
  }
  .buttonwidth {
    width: 40%;
  }
</style>
