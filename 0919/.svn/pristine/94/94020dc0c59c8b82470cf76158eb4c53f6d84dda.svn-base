/*
 * @Author: chenyang
 * @Date: 2017-09-21 17:14:14
 * @Last Modified by: chenyang
 * @Last Modified time: 2017-09-25 16:17:42
 */

 <template>
  <el-dialog :title="title" v-model="visible" :before-close="handleClose" size="small" :close-on-click-modal="true">
    <!--<el-form :model="deviceInfo" ref="deviceAddOrUpdateForm" class="demo-ruleForm" >-->
    <el-form ref="ImageAddOrUpdate" :model="fileds">
      <el-col :gutter="20">
        <el-form-item label="图片类型">
          <el-select v-model="fileds.imagetype" placeholder="选择图片类型" @change="imageTypeClickEvent" class="selectA">
            <el-option v-for="item in imagetype" :key="item.value" :label="item.text" :value="item.value">
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="图片尺寸">
          <el-select v-model="fileds.imagesize" placeholder="选择图片尺寸" class="selectA">
            <el-option v-for="item in imagesize" :key="item.value" :label="item.text" :value="item.value">
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="文件类型">
          <el-select v-model="fileds.filetype" placeholder="选择文件类型" class="selectA">
            <el-option v-for="item in filetype" :key="item.value" :label="item.text" :value="item.value">
            </el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="图片名称">
          <el-input v-model="fileds.imagename" placeholder="图片名称" :disabled="true"></el-input>
        </el-form-item>
        <el-form-item label="描述">
          <el-input v-model="fileds.description"></el-input>
        </el-form-item>
      </el-col>
    </el-form>
    <el-upload
        class="upload-demo"
        action="/raiis/image"
        :headers="headersUpload"
        ref="uploadPackage"
        :data="fileds"
        :on-success="uploadSuccess"
        :on-error="uploadError"
        :on-preview="handlePreview"
        :on-remove="handleRemove"
        :file-list="fileList2"
        :auto-upload="false"
        list-type="picture">
        <el-button size="small" type="primary">点击上传</el-button>
        <div slot="tip" class="el-upload__tip">上传图片</div>
    </el-upload>
    <check-in
      title="值机柜台图片"
      ref='checkin'
      @getCheckin = 'getCheckinFileName'
    >
    </check-in>
    <static-name
      title="静态图片"
      ref='staticImage'
      @staticImage = 'getCheckinFileName'>
    </static-name>
    <flight-logo
      title="航班图片"
      ref='getFlightLogoImage'
      @getFlightLogoName = 'getCheckinFileName'>
    </flight-logo>
    <destination
      title="目的地图片"
      ref='getDestinationLogo'
      @getDestination = 'getCheckinFileName'>
    </destination>
    <div slot="footer" class="dialog-footer">
      <el-button @click.native="visible = false">取消</el-button>
      <el-button @click="resetForm('ImageAddOrUpdate')">重置</el-button>
      <el-button type="primary" @click.native="handleSubmit" :loading="loading">提交</el-button>
    </div>
  </el-dialog>
</template>

 <script>
import Util from '../../../common/js/util'
import GlobalConfig from '../../../common/config/global'
import CheckIn from '../../device/ImageAddForm/CheckIn'
import StaticName from '../../device/ImageAddForm/StaticName'
import FlightLogo from '../../device/ImageAddForm/FlightLogo'
import Destination from '../../device/ImageAddForm/Destination'
import axiosHelper from './../../../common/js/axios-helper'

export default {
  props: {
    title: {
      type: String,
      default: '新增'
    },
    to: {
      type: Function,
      default: function () { }
    },
    callback: {
      type: Function,
      default: function () { }
    },
    Func: {
      type: String
    }
  },
  data () {
    return {
      fileList2: [],
      upLoadAction: '',
      // 用于保存请求的头部信息
      headersUpload: null,
      visible: false,
      loading: false,
      oldValue: {},
      fileds: {id: '', createBy: '', createTime: '', description: '', filetype: '', imagename: '', imagesize: '', imagetype: '', updateBy: '', updateTime: ''},
      imagetype: [ { text: GlobalConfig.imageTypeText[0], value: GlobalConfig.imageType[0] }, { text: GlobalConfig.imageTypeText[1], value: GlobalConfig.imageType[1] }, { text: GlobalConfig.imageTypeText[2], value: GlobalConfig.imageType[2] }, { text: GlobalConfig.imageTypeText[3], value: GlobalConfig.imageType[3] } ],
      imagesize: [ { text: GlobalConfig.imageSizeText[0], value: GlobalConfig.imageSize[0] }, { text: GlobalConfig.imageSizeText[1], value: GlobalConfig.imageSize[1] } ],
      filetype: [ { text: GlobalConfig.fileTypeText[0], value: GlobalConfig.fileType[0] }, { text: GlobalConfig.fileTypeText[1], value: GlobalConfig.fileType[1] }, { text: GlobalConfig.fileTypeText[2], value: GlobalConfig.fileType[2] }, { text: GlobalConfig.fileTypeText[3], value: GlobalConfig.fileType[3] } ]
    }
  },
  components: {
      checkIn: CheckIn,
      staticName: StaticName,
      flightLogo: FlightLogo,
      destination: Destination
  },
  methods: {
    handleRemove (file, fileList) {
        console.log(file, fileList)
    },
    handlePreview (file) {
      console.log(file)
    },
    getCheckinFileName (fileName) {
        // this.selectItemDetail.imagename = fileName
        this.fileds.imagename = fileName
        // console.log(fileName)
    },
    showItem (clickItem) {
        this.selectItemDetail = clickItem
        // console.log(clickItem)
        if (clickItem !== '') {
          if (clickItem === 'flight_logo') {
            // console.log(clickItem)
            this.$refs['getFlightLogoImage'].show()
          } else if (clickItem === 'static') {
            this.$refs['staticImage'].show()
          } else if (clickItem === 'check_counter') {
            this.$refs['checkin'].show()
          } else if (clickItem === 'destination') {
            this.$refs['getDestinationLogo'].show()
          }
        }
        // console.log(this.selectItemDetail.imagetype)
    },
    imageTypeClickEvent () {
      // this.$emit('imageTypeClick', this.fileds.imageType)
      // console.log(this.fileds.imagetype)
      this.showItem(this.fileds.imagetype)
    },
    show: function (row) {
      if (row != null) {
        this.fileds = row
        console.log(this.fileds.imagetype)
        this.oldValue = Object.assign({}, row)
      }
      this.visible = true
    },
    uploadSuccess () {
      console.log('成功了')
    },
    uploadError () {
      console.log('失败了')
    },
    handleClose: function (params) {
      this.visible = false
      this.fileds = {id: '', createBy: '', createTime: '', description: '', filetype: '', imagename: '', imagesize: '', imagetype: '', updateBy: '', updateTime: ''}
    },
    handleSubmit: function (params) {
      if (this.Func === 'addFunc') {  // 添加功能
        this.$refs['ImageAddOrUpdate'].validate((valid) => {
        if (valid) {
          console.log(this.fileds)
          this.headersUpload = axiosHelper.generatAuthHeader()
          this.$confirm('确认提交吗？', '提示', {}).then(() => {
          this.$refs.uploadPackage.submit()
          this.loading = false
          this.visible = false
          this.fileds = {id: '', createBy: '', createTime: '', description: '', filetype: '', imagename: '', imagesize: '', imagetype: '', updateBy: '', updateTime: ''}
          this.callback()
          this.$notify({
            title: '成功',
            message: '提交成功',
            type: 'success'
          })
          }).catch(() => {
            this.$message({
            type: 'info',
            message: '已取消提交'
            })
          })
        }
      })
      } else if (this.Func === 'editFunc') {  // 修改功能
        this.$refs['ImageAddOrUpdate'].validate((valid) => {
        if (valid) {
          this.headersUpload = axiosHelper.generatAuthHeader()
          this.$confirm('确认提交吗？', '提示', {}).then(() => {
            this.loading = true
            let para = { newValue: this.fileds, oldValue: this.oldValue }
            this.to(para).then((res) => {
              this.loading = false
              this.$notify(Util.notifyBody(res.ok, res.msg))
              this.$refs['ImageAddOrUpdate'].resetFields()
              this.visible = false
              this.fileds = {id: '', createBy: '', createTime: '', description: '', filetype: '', imagename: '', imagesize: '', imagetype: '', updateBy: '', updateTime: ''}
              this.callback()
            })
          }).catch(() => {
            this.$message({
              type: 'info',
              message: '已取消提交'
            })
          })
        }
      })
      }
    },
    resetForm (formName) {
      // console.log(formName)
      this.$refs[formName].resetFields()
      // this.fileds = {imageType: '', imageSize: '', fileType: '', imageName: '', description: ''}
      this.fileds = {id: '', createBy: '', createTime: '', description: '', filetype: '', imagename: '', imagesize: '', imagetype: '', updateBy: '', updateTime: ''}
    }
  }
}
</script>

<style>
.selectA {
  width: 100%;
}
</style>
