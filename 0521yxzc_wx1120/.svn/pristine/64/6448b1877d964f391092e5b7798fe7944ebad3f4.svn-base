<template>
    <transition enter-active-class="animated slideInRight" leave-active-class="animated slideOutRight">
        <div class="suggest">
            <!-- suggest头部检索 -->
            <!-- 搜索框 -->
            <div class="suggest-header">
                <!-- 城市选择 -->
                <div class="city-wrapper">
                    <div class="city-content border-right-1px">
                        <!-- 根据父级组件传参：type判断是否对子组件添加'.type_to'样式 -->
                        <!-- 没有被点击的时候显示的 -->
                        <div class="city-select" v-bind:class="{'type_to':!location.starOrEnd}" v-show="!cityFocus" @click="cityFocus=true;addressFocus=false;addressInputing=false;">
                            <span>{{location.selectCity}}</span>
                        </div>
                        <!-- 点击的时候显示的 -->
                        <div class="city-input-wrapper" v-show="cityFocus">
                            <input type="text" ref="tipinput" placeholder="城市中文名或拼音" class="city-input" style="display: block;" v-on:keyup="cityInputing=true" v-model="DistrictKeyWord">
                        </div>
                    </div>
                </div>
                <!-- 城市的具体地点 -->
                <div class="address-wrapper">
                    <!-- 输入地点 -->
                    <input type="text" placeholder="请输入地点" class="address-input" @focus="cityFocus=false;addressFocus=true;cityInputing=false" v-on:keyup="addressInputing=true" v-model="addressKeyWord">
                    <!-- 旁边的清空符号 -->
                    <div class="clear" v-show="addressKeyWord">
                        <i class="clearBtn" @click="addressKeyWord='';switch_state({name:'tips',val:[]});addressInputing=false"></i>
                    </div>
                </div>
                <!-- 右边的取消按钮 -->
                <div class="cancel-wrapper">
                    <!-- 点击时间可以有两个方法？ -->
                    <span class="text" @click="resetLocation();back_home()">取消</span>
                </div>
            </div>
            <!-- suggest头部检索 end-->
            <!-- suggest信息展示 -->
            <!-- 信息结果展示部分 -->
            <div class="page-list">
                <div class="citylist">
                    <!-- 自动补全 -->
                    <autocomplete-list v-show="addressInputing"></autocomplete-list>
                    <searchHistory v-show="(!cityFocus&&!addressInputing&&addressFocus)"></searchHistory>
                    <!-- <suggest-list v-if="cityFocus&&!cityInputing" v-on:listenChildEvent="cityMatchClick()"></suggest-list> -->
                    <!-- 是否开启本地静态数据 -->
                    <openCityData  v-if="cityFocus&&!cityInputing" v-on:listenChildEvent="cityMatchClick()"></openCityData>
                    <cityMatch-list v-show="cityInputing" v-on:listenChildEvent="cityMatchClick()"></cityMatch-list>
                    <noResult v-if="noResultState"></noResult>
                </div>
            </div>
        </div>
    </transition>
</template>
<script>
import { mapState, mapActions } from 'vuex'
const suggestList = () => import('@/components/suggest/suggestList.vue')
const openCityData = () => import('@/components/suggest/openCityData.vue')
const autocompleteList = () => import('@/components/suggest/autocompleteList.vue')
const searchHistory = () => import('@/components/suggest/searchHistory.vue')
const cityMatchList = () => import('@/components/suggest/cityMatchList.vue')
const noResult = () => import('@/components/suggest/noResult.vue')
export default {
  name: 'suggets',
  data () {
    return {
      cityFocus: false,
      cityInputing: false,
      addressFocus: false,
      addressInputing: false,
      DistrictKeyWord: '',
      addressKeyWord: ''
    }
  },
  watch: {
    DistrictKeyWord (val) {
      this.$store.dispatch('CityListSearch', val)
    },
    addressKeyWord (val) {
      this.$store.dispatch('autocomplete', val)
    }
  },
  computed: {
    ...mapState([
      'location'
    ]),
    noResultState () {
      if ((this.location.tips === undefined || this.location.tips.length === 0) && (this.cityInputing || this.addressInputing)) {
        return true
      } else return false
    }
  },
  methods: {
    cityMatchClick (val) {
      this.cityFocus = false
      this.cityInputing = false
    },
    back_home () {
      this.$router.go(-1)
    },
    ...mapActions({
      'switch_state': 'switch_location',
      'DistrictSearch': 'DistrictSearch',
      'resetLocation': 'resetLocation'
    })
  },
  components: {
    suggestList,
    autocompleteList,
    searchHistory,
    cityMatchList,
    noResult,
    openCityData
  }
}
</script>
<style lang="less">
@import "../../assets/css/less/variable.less";
.suggest {
  position: fixed;
  z-index: 9;
  top: 0;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  animation-duration: .3s;
  background: #f3f3f3;
}

.page-list {
  position: fixed;
  top: 43px;
  left: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.citylist {
  width: 100%;
  height: 100%;
  padding: 0 10px;
  overflow: hidden;
  margin-top: 10px;
  box-sizing: border-box;
}


/* suggest头部组件样式 */

.suggest-header {
  position: relative;
  z-index: 9;
  display: flex;
  height: 44px;
  padding: 0 10px;
  white-space: nowrap;
  font-size: 14px;
  color: #7a7c81;
  background: #fff;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.05);
  .city-wrapper {
    padding: 13px 0;
    .city-content {
      height: 18px;
      .city-select {
        line-height: 18px;
        padding: 0 29px 0 20px;
        &:before {
          content: '';
          position: absolute;
          width: 5px;
          height: 5px;
          border-radius: 50%;
          top: 50%;
          left: 7.5px;
          margin-top: -2.5px;
          background: #2fc68d;
        }
        &:after {
          content: '';
          position: absolute;
          width: 6px;
          height: 6px;
          border-radius: 50%;
          top: 50%;
          right: 11.5px;
          margin-top: -2.5px;
          background: url('../../assets/images/arrow_down.png');
        }
        &.type_to {
          &:before {
            background: #ea7b83;
          }
        }
      }
      .city-input-wrapper {
        width: 130px;
        font-size: 14px;
        &:after {
          content: '';
          position: absolute;
          border-right: 1px solid #f5f5f5;
        }
      }
    }
  }
  .address-wrapper {
    position: relative;
    flex: 1;
    padding: 0 10px;
    .address-input {
      display: table-cell;
      width: 100%;
      padding: 13px 0;
      vertical-align: middle;
      font-size: 14px;
    }
    .clear {
      position: absolute;
      right: 0;
      top: 50%;
      width: 16px;
      height: 16px;
      margin-top: -8px;
      .clearBtn {
        display: block;
        width: 16px;
        height: 16px;
        background: url('../../assets/images/wrong.png');
      }
    }
  }
  .cancel-wrapper {
    display: inline-block;
    padding: 0 16px;
    margin-top: 15px;
    color: @fc_active;
    font-size: 14px;
  }
  input {
    width: 100%;
    outline: 0;
    border: 0;
    color: #7a7c81;
    overflow: hidden;
    &::-webkit-input-placeholder {
      color: #c5c7ca;
    }
  }
}

</style>
